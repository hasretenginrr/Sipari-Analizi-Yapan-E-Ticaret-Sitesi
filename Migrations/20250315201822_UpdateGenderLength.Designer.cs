// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BitirmeProjesi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250315201822_UpdateGenderLength")]
    partial class UpdateGenderLength
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Order_Details", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("order_id")
                        .HasColumnType("integer");

                    b.Property<double?>("product_id")
                        .HasColumnType("double precision");

                    b.Property<int?>("quantity")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("order_id");

                    b.ToTable("order_details");
                });

            modelBuilder.Entity("Orders", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime?>("order_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("user_id")
                        .HasColumnType("double precision");

                    b.HasKey("id");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("Products", b =>
                {
                    b.Property<double>("p_id")
                        .HasColumnType("double precision");

                    b.Property<double?>("avg_rating")
                        .HasColumnType("double precision");

                    b.Property<string>("brand")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("colour")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("img")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("p_attributes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("price")
                        .HasColumnType("double precision");

                    b.Property<double?>("ratingcount")
                        .HasColumnType("double precision");

                    b.HasKey("p_id");

                    b.ToTable("products");
                });

            modelBuilder.Entity("Users", b =>
                {
                    b.Property<double>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("double precision");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("gender")
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("password")
                        .HasColumnType("text");

                    b.Property<string>("user_name")
                        .HasColumnType("text");

                    b.HasKey("user_id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Order_Details", b =>
                {
                    b.HasOne("Orders", "Order")
                        .WithMany("Order_Details")
                        .HasForeignKey("order_id");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Orders", b =>
                {
                    b.Navigation("Order_Details");
                });
#pragma warning restore 612, 618
        }
    }
}
